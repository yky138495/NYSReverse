//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AccountBookVo, ConcurrencySyncManager, DataSuiteVo, FDSyncStatusView, NSArray, NSMutableArray, NSString, NSTimer;

@interface SyncCenter : NSObject
{
    struct dispatch_queue_s *_queue;
    NSArray *_bindIgnoreAccounts;
    AccountBookVo *_selectedAccountBookBeforeSync;
    DataSuiteVo *_dataSuiteVo;
    _Bool _upgradeSync;
    NSArray *_ignoreBookVos;
    NSArray *_deletedBookVos;
    _Bool _disableAutoDismiss;
    _Bool _isAnimating;
    _Bool _shouldShowRetry;
    unsigned long long _currentAccountBookIndex;
    struct dispatch_queue_s *_syncQueue;
    _Bool _shouldShowMessage;
    AccountBookVo *_currentAccountBook;
    double _syncBegin;
    double _syncEnd;
    id <SyncCenterDelegate> _delegate;
    FDSyncStatusView *_syncStatusView;
    NSString *_username;
    NSString *_password;
    NSArray *_allAccountBooks;
    ConcurrencySyncManager *_concurrencySyncManager;
    NSMutableArray *_completedLog;
    unsigned long long _timerCount;
    NSTimer *_timer;
    CDUnknownBlockType _completionBlock;
}

+ (_Bool)isSyncingToServer;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property unsigned long long timerCount; // @synthesize timerCount=_timerCount;
@property(retain, nonatomic) NSMutableArray *completedLog; // @synthesize completedLog=_completedLog;
@property(retain, nonatomic) ConcurrencySyncManager *concurrencySyncManager; // @synthesize concurrencySyncManager=_concurrencySyncManager;
@property(retain, nonatomic) DataSuiteVo *dataSuiteVo; // @synthesize dataSuiteVo=_dataSuiteVo;
@property(retain, nonatomic) NSArray *allAccountBooks; // @synthesize allAccountBooks=_allAccountBooks;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) _Bool shouldShowMessage; // @synthesize shouldShowMessage=_shouldShowMessage;
@property(retain, nonatomic) FDSyncStatusView *syncStatusView; // @synthesize syncStatusView=_syncStatusView;
@property(nonatomic) __weak id <SyncCenterDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double syncEnd; // @synthesize syncEnd=_syncEnd;
@property(nonatomic) double syncBegin; // @synthesize syncBegin=_syncBegin;
@property(retain, nonatomic) NSArray *bindIgnoreAccounts; // @synthesize bindIgnoreAccounts=_bindIgnoreAccounts;
@property(nonatomic) _Bool disableAutoDismiss; // @synthesize disableAutoDismiss=_disableAutoDismiss;
@property(retain, nonatomic) NSArray *deletedBookVos; // @synthesize deletedBookVos=_deletedBookVos;
@property(retain, nonatomic) NSArray *ignoreBookVos; // @synthesize ignoreBookVos=_ignoreBookVos;
@property(nonatomic) _Bool upgradeSync; // @synthesize upgradeSync=_upgradeSync;
@property(retain, nonatomic) AccountBookVo *selectedAccountBookBeforeSync; // @synthesize selectedAccountBookBeforeSync=_selectedAccountBookBeforeSync;
@property(retain, nonatomic) AccountBookVo *currentAccountBook; // @synthesize currentAccountBook=_currentAccountBook;
- (void).cxx_destruct;
- (_Bool)isSelectedAccountBookHaveBeenDeleted;
- (void)endSyncAction;
- (id)formatMessage:(id)arg1 withAccountBookName:(id)arg2;
- (void)addMessage:(id)arg1 forAccountBookVo:(id)arg2;
- (id)setupAccountBooksForSync;
- (void)concurrencySyncToServerWithCompletion:(CDUnknownBlockType)arg1;
- (void)concurrencySyncToServerWithPreviousCompletion;
- (void)enqueueCompletedObject:(id)arg1;
- (id)dequeueCompletedObject;
- (void)setupStatusViewWhenAnimationComplete;
- (void)nextSimulate;
- (void)checkCompletedLog:(id)arg1;
- (void)addProgressLog:(id)arg1;
- (void)addSyncErrorLog:(id)arg1;
- (void)syncCompleted:(id)arg1;
- (void)dealloc;
- (void)resetWithUsername:(id)arg1 password:(id)arg2 accountBooks:(id)arg3 selectedAccountBookBeforeSync:(id)arg4 dataSuiteVo:(id)arg5 ignoreBookVos:(id)arg6 bindIgnoreAccounts:(id)arg7;
- (id)mockLogWithAccountBookVo:(id)arg1 message:(id)arg2 code:(unsigned long long)arg3;
- (id)initWithUsername:(id)arg1 password:(id)arg2 accountBooks:(id)arg3 selectedAccountBookBeforeSync:(id)arg4 dataSuiteVo:(id)arg5 ignoreBookVos:(id)arg6 deletedBookVos:(id)arg7;

@end

