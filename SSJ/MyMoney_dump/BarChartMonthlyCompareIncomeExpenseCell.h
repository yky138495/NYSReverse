//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UITableViewCell.h"

@class BarChartMonthlyCompareIncomeExpenseCellViewModel, MASConstraint, UILabel, UIView;

@interface BarChartMonthlyCompareIncomeExpenseCell : UITableViewCell
{
    _Bool _isAnimated;
    BarChartMonthlyCompareIncomeExpenseCellViewModel *_viewModel;
    UILabel *_monthLabel;
    UILabel *_incomeLabel;
    UILabel *_expenseLabel;
    UIView *_incomeBar;
    UIView *_expenseBar;
    MASConstraint *_incomeBarWidth;
    MASConstraint *_expenseBarWidth;
    UIView *_bottomSeparator;
    UIView *_incomeBlankBar;
    UIView *_expenseBlankBar;
}

@property(retain, nonatomic) UIView *expenseBlankBar; // @synthesize expenseBlankBar=_expenseBlankBar;
@property(retain, nonatomic) UIView *incomeBlankBar; // @synthesize incomeBlankBar=_incomeBlankBar;
@property(retain, nonatomic) UIView *bottomSeparator; // @synthesize bottomSeparator=_bottomSeparator;
@property(nonatomic) _Bool isAnimated; // @synthesize isAnimated=_isAnimated;
@property(retain, nonatomic) MASConstraint *expenseBarWidth; // @synthesize expenseBarWidth=_expenseBarWidth;
@property(retain, nonatomic) MASConstraint *incomeBarWidth; // @synthesize incomeBarWidth=_incomeBarWidth;
@property(retain, nonatomic) UIView *expenseBar; // @synthesize expenseBar=_expenseBar;
@property(retain, nonatomic) UIView *incomeBar; // @synthesize incomeBar=_incomeBar;
@property(retain, nonatomic) UILabel *expenseLabel; // @synthesize expenseLabel=_expenseLabel;
@property(retain, nonatomic) UILabel *incomeLabel; // @synthesize incomeLabel=_incomeLabel;
@property(retain, nonatomic) UILabel *monthLabel; // @synthesize monthLabel=_monthLabel;
@property(retain, nonatomic) BarChartMonthlyCompareIncomeExpenseCellViewModel *viewModel; // @synthesize viewModel=_viewModel;
- (void).cxx_destruct;
- (id)createBlankBar;
- (void)showBars;
- (void)prepareForAnimation;
- (void)updateConstraints;
- (void)initSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

